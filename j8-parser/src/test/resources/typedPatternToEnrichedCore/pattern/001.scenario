-- Translate case into lambda
type Tuple a b =
    Tuple a b

first t =
    case t of
        Tuple x y -> x

second t =
    case t of
        Tuple x y -> y
-- enrichedASTpp
type Tuple =
  Tuple '0 '1


first : <0, 1> file.package.name.File.Tuple '0 '1 -> '0
first =
  (LAMBDA t ->
    (CALL
      (LAMBDA $case ->
        (BAR
          (CALL
            (LAMBDA Tuple '4 '5 ->
              x
            )
            $case
          )
          ERROR
        )
      )
      t
    )
  )


second : <0, 1> file.package.name.File.Tuple '0 '1 -> '1
second =
  (LAMBDA t ->
    (CALL
      (LAMBDA $case ->
        (BAR
          (CALL
            (LAMBDA Tuple '10 '11 ->
              y
            )
            $case
          )
          ERROR
        )
      )
      t
    )
  )
