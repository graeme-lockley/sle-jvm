-- A list ADT type declaration
type List a =
    Nil
  | Cons a (List a)

singleton x =
    Cons x Nil

duplicate x =
    Cons x (Cons x Nil)
-- ast
Module:
  declarations: [
      TypeDeclaration:
        arguments: [
            ID:
              name: a
          ]
        constructors: [
            TypeConstructor:
              arguments: []
              name:
                ID:
                  name: Nil
            TypeConstructor:
              arguments: [
                  TVarReference:
                    name: a
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: a
                      ]
                    name:
                      QualifiedID:
                        name: List
                        qualifier: null
                ]
              name:
                ID:
                  name: Cons
          ]
        name:
          ID:
            name: List
      LetDeclaration:
        arguments: [
            IdReferencePattern:
              name: x
          ]
        expression:
          CallExpression:
            operands: [
                IdReference:
                  name:
                    QualifiedID:
                      name: x
                      qualifier: null
                ConstructorReference:
                  name:
                    QualifiedID:
                      name: Nil
                      qualifier: null
              ]
            operator:
              ConstructorReference:
                name:
                  QualifiedID:
                    name: Cons
                    qualifier: null
        name:
          ID:
            name: singleton
      LetDeclaration:
        arguments: [
            IdReferencePattern:
              name: x
          ]
        expression:
          CallExpression:
            operands: [
                IdReference:
                  name:
                    QualifiedID:
                      name: x
                      qualifier: null
                NestedExpression:
                  expression:
                    CallExpression:
                      operands: [
                          IdReference:
                            name:
                              QualifiedID:
                                name: x
                                qualifier: null
                          ConstructorReference:
                            name:
                              QualifiedID:
                                name: Nil
                                qualifier: null
                        ]
                      operator:
                        ConstructorReference:
                          name:
                            QualifiedID:
                              name: Cons
                              qualifier: null
              ]
            operator:
              ConstructorReference:
                name:
                  QualifiedID:
                    name: Cons
                    qualifier: null
        name:
          ID:
            name: duplicate
    ]
  exports: []
  imports: []