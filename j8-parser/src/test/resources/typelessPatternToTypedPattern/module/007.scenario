-- An ADT declaration export with constructors
export length, List(..)


type List a =
    Nil
  | Cons a (List a)


length : List a -> Int
length Nil = 0
length (Cons x xs) = 1 + length xs
-- typeAST
Module:
  declarations: [
      TypeDeclaration:
        constructors: [
            Constructor:
              arguments: []
              name:
                ID:
                  name: Nil
            Constructor:
              arguments: [
                  TVar:
                    variable: 0
                  TCon:
                    arguments: [
                        TVar:
                          variable: 0
                      ]
                    name: List
                ]
              name:
                ID:
                  name: Cons
          ]
        name:
          ID:
            name: List
        scheme:
          Scheme:
            parameters: [
                0
              ]
            type:
              TCon:
                arguments: [
                    TVar:
                      variable: 0
                  ]
                name: List
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                ConstructorReferencePattern:
                  name: Nil
                  parameters: []
                  type:
                    TCon:
                      arguments: [
                          TVar:
                            variable: 1
                        ]
                      name: List
              expression:
                ConstantInt:
                  type:
                    TCon:
                      arguments: []
                      name: Int
                  value: 0
              type:
                TArr:
                  domain:
                    TCon:
                      arguments: [
                          TVar:
                            variable: 1
                        ]
                      name: List
                  range:
                    TCon:
                      arguments: []
                      name: Int
            LambdaExpression:
              argument:
                ConstructorReferencePattern:
                  name: Cons
                  parameters: [
                      IdReferencePattern:
                        name: x
                        type:
                          TVar:
                            variable: 1
                      IdReferencePattern:
                        name: xs
                        type:
                          TCon:
                            arguments: [
                                TVar:
                                  variable: 1
                              ]
                            name: List
                    ]
                  type:
                    TCon:
                      arguments: [
                          TVar:
                            variable: 1
                        ]
                      name: List
              expression:
                CallExpression:
                  operand:
                    CallExpression:
                      operand:
                        IdReference:
                          name: xs
                          type:
                            TCon:
                              arguments: [
                                  TVar:
                                    variable: 1
                                ]
                              name: List
                      operator:
                        IdReference:
                          name: length
                          type:
                            TArr:
                              domain:
                                TCon:
                                  arguments: [
                                      TVar:
                                        variable: 1
                                    ]
                                  name: List
                              range:
                                TCon:
                                  arguments: []
                                  name: Int
                      type:
                        TCon:
                          arguments: []
                          name: Int
                  operator:
                    CallExpression:
                      operand:
                        ConstantInt:
                          type:
                            TCon:
                              arguments: []
                              name: Int
                          value: 1
                      operator:
                        IdReference:
                          name: (+)
                          type:
                            TArr:
                              domain:
                                TCon:
                                  arguments: []
                                  name: Int
                              range:
                                TArr:
                                  domain:
                                    TCon:
                                      arguments: []
                                      name: Int
                                  range:
                                    TCon:
                                      arguments: []
                                      name: Int
                      type:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Int
                          range:
                            TCon:
                              arguments: []
                              name: Int
                  type:
                    TCon:
                      arguments: []
                      name: Int
              type:
                TArr:
                  domain:
                    TCon:
                      arguments: [
                          TVar:
                            variable: 1
                        ]
                      name: List
                  range:
                    TCon:
                      arguments: []
                      name: Int
          ]
        name:
          ID:
            name: length
        scheme:
          Scheme:
            parameters: [
                0
              ]
            type:
              TArr:
                domain:
                  TCon:
                    arguments: [
                        TVar:
                          variable: 0
                      ]
                    name: List
                range:
                  TCon:
                    arguments: []
                    name: Int
    ]
  exports: [
      ValueExportDeclaration:
        name: length
        scheme:
          Scheme:
            parameters: [
                0
              ]
            type:
              TArr:
                domain:
                  TCon:
                    arguments: [
                        TVar:
                          variable: 0
                      ]
                    name: List
                range:
                  TCon:
                    arguments: []
                    name: Int
      FullADTExportDeclaration:
        constructors: [
            ConstructorNameDeclaration:
              name: Nil
              scheme:
                Scheme:
                  parameters: [
                      0
                    ]
                  type:
                    TCon:
                      arguments: [
                          TVar:
                            variable: 0
                        ]
                      name: List
            ConstructorNameDeclaration:
              name: Cons
              scheme:
                Scheme:
                  parameters: [
                      0
                    ]
                  type:
                    TArr:
                      domain:
                        TVar:
                          variable: 0
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: [
                                  TVar:
                                    variable: 0
                                ]
                              name: List
                          range:
                            TCon:
                              arguments: [
                                  TVar:
                                    variable: 0
                                ]
                              name: List
          ]
        name: List
        scheme:
          Scheme:
            parameters: [
                0
              ]
            type:
              TCon:
                arguments: [
                    TVar:
                      variable: 0
                  ]
                name: List
    ]
  imports: []