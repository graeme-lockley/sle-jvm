-- Use an explicitly imported opaque type
import file:./List exposing map, List, IntList

transform : (Int -> Int) -> IntList -> IntList
transform f =
    map f

multiply n =
    transform (\i -> n * i)
-- typeAST
Module:
  declarations: [
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TCon:
                          arguments: []
                          name: Data.Int
              expression:
                CallExpression:
                  operand:
                    IdReference:
                      name: f
                      type:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
                  operator:
                    IdReference:
                      name: file.package.name.File.map
                      type:
                        TArr:
                          domain:
                            TArr:
                              domain:
                                TCon:
                                  arguments: []
                                  name: Data.Int
                              range:
                                TCon:
                                  arguments: []
                                  name: Data.Int
                          range:
                            TArr:
                              domain:
                                TCon:
                                  arguments: [
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                    ]
                                  name: /home/alfred/.sle/List
                              range:
                                TCon:
                                  arguments: [
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                    ]
                                  name: /home/alfred/.sle/List
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: /home/alfred/.sle/List
                      range:
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: /home/alfred/.sle/List
              type:
                TArr:
                  domain:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TCon:
                          arguments: []
                          name: Data.Int
                  range:
                    TArr:
                      domain:
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: /home/alfred/.sle/List
                      range:
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: /home/alfred/.sle/List
          ]
        name:
          ID:
            name: transform
        scheme:
          Scheme:
            parameters: []
            type:
              TArr:
                domain:
                  TArr:
                    domain:
                      TCon:
                        arguments: []
                        name: Data.Int
                    range:
                      TCon:
                        arguments: []
                        name: Data.Int
                range:
                  TArr:
                    domain:
                      TAlias:
                        arguments: []
                        name: IntList
                    range:
                      TAlias:
                        arguments: []
                        name: IntList
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: n
                  type:
                    TCon:
                      arguments: []
                      name: Data.Int
              expression:
                CallExpression:
                  operand:
                    LambdaExpression:
                      argument:
                        IdReferencePattern:
                          name: i
                          type:
                            TCon:
                              arguments: []
                              name: Data.Int
                      expression:
                        CallExpression:
                          operand:
                            IdReference:
                              name: i
                              type:
                                TCon:
                                  arguments: []
                                  name: Data.Int
                          operator:
                            CallExpression:
                              operand:
                                IdReference:
                                  name: n
                                  type:
                                    TCon:
                                      arguments: []
                                      name: Data.Int
                              operator:
                                IdReference:
                                  name: (*)
                                  type:
                                    TArr:
                                      domain:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                      range:
                                        TArr:
                                          domain:
                                            TCon:
                                              arguments: []
                                              name: Data.Int
                                          range:
                                            TCon:
                                              arguments: []
                                              name: Data.Int
                              type:
                                TArr:
                                  domain:
                                    TCon:
                                      arguments: []
                                      name: Data.Int
                                  range:
                                    TCon:
                                      arguments: []
                                      name: Data.Int
                          type:
                            TCon:
                              arguments: []
                              name: Data.Int
                      type:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
                  operator:
                    IdReference:
                      name: transform
                      type:
                        TArr:
                          domain:
                            TArr:
                              domain:
                                TCon:
                                  arguments: []
                                  name: Data.Int
                              range:
                                TCon:
                                  arguments: []
                                  name: Data.Int
                          range:
                            TArr:
                              domain:
                                TAlias:
                                  arguments: []
                                  name: IntList
                              range:
                                TAlias:
                                  arguments: []
                                  name: IntList
                  type:
                    TArr:
                      domain:
                        TAlias:
                          arguments: []
                          name: IntList
                      range:
                        TAlias:
                          arguments: []
                          name: IntList
              type:
                TArr:
                  domain:
                    TCon:
                      arguments: []
                      name: Data.Int
                  range:
                    TArr:
                      domain:
                        TAlias:
                          arguments: []
                          name: IntList
                      range:
                        TAlias:
                          arguments: []
                          name: IntList
          ]
        name:
          ID:
            name: multiply
        scheme:
          Scheme:
            parameters: []
            type:
              TArr:
                domain:
                  TCon:
                    arguments: []
                    name: Data.Int
                range:
                  TArr:
                    domain:
                      TAlias:
                        arguments: []
                        name: IntList
                    range:
                      TAlias:
                        arguments: []
                        name: IntList
    ]
  exports: []