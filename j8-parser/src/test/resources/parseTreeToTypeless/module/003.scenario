-- Type alias and a let declaration
typealias IntToInt =
    Int -> Int

negate : IntToInt
negate a =
    0 - a
-- ast
Module:
  declarations: [
    TypeAliasDeclaration:
      name:
        ID:
          name: IntToInt
      schema:
          TSchema:
            parameters: []
            type:
                TArrow:
                  domain:
                    TConstReference:
                      name: Int
                  range:
                    TConstReference:
                      name: Int
      LetSignature:
        name:
          ID:
            name: negate
        schema:
          TSchema:
            parameters: []
            type:
              TConstReference:
                name: IntToInt
     LetDeclaration:
      arguments: [
        ID:
          name: a
      ]
      expression:
        BinaryOpExpression:
          left:
            ConstantInt:
              value: 0
          operator:
            ID:
              name: -
          right:
            IdReference:
              name: a
      name:
        ID:
          name: negate
  ]