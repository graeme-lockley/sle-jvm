-- Update record
typealias Person =
  { name : String
  , dateOfBirth :
    { day : Int
    , month : Int
    , year : Int
    }
  }


extractName : Person -> String
extractName person =
  person.name


value =
  { name = "Graeme"
  , dateOfBirth =
    { day = 9
    , month = 4
    , year = 1968
    }
  }


main =
  extractName { value | name = "Andrew" }
-- coreAST
ParseDetail:
  environment:
    Environment:
      typeBindings: {
          Int ->
                    BuiltinBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.Int
          Bool ->
                    BuiltinBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.Bool
          String ->
                    BuiltinBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.String
          Char ->
                    BuiltinBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.Char
          () ->
                    BuiltinBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.Unit
          Person ->
                    AliasBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TRec:
                      fields: [
                          Pair:
                            first: name
                            second:
                              TCon:
                                arguments: []
                                name: Data.String
                          Pair:
                            first: dateOfBirth
                            second:
                              TRec:
                                fields: [
                                    Pair:
                                      first: day
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                    Pair:
                                      first: month
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                    Pair:
                                      first: year
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                  ]
                                fixed: true
                        ]
                      fixed: true
        }
      valueBindings: {
          + ->
                    OperatorBinding:
              associativity:
                Left:
              precedence: 6
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
          - ->
                    OperatorBinding:
              associativity:
                Left:
              precedence: 6
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
          * ->
                    OperatorBinding:
              associativity:
                Left:
              precedence: 7
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
          / ->
                    OperatorBinding:
              associativity:
                Left:
              precedence: 7
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Int
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Int
                          range:
                            TCon:
                              arguments: []
                              name: Data.Int
          && ->
                    OperatorBinding:
              associativity:
                Right:
              precedence: 3
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TCon:
                          arguments: []
                          name: Data.Bool
                      range:
                        TArr:
                          domain:
                            TCon:
                              arguments: []
                              name: Data.Bool
                          range:
                            TCon:
                              arguments: []
                              name: Data.Bool
          == ->
                    OperatorBinding:
              associativity:
                None:
              precedence: 4
              scheme:
                Scheme:
                  parameters: [
                      1
                    ]
                  type:
                    TArr:
                      domain:
                        TVar:
                          variable: 1
                      range:
                        TArr:
                          domain:
                            TVar:
                              variable: 1
                          range:
                            TCon:
                              arguments: []
                              name: Data.Bool
          aString ->
                    VariableBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.String
          extractName ->
                    VariableBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TArr:
                      domain:
                        TAlias:
                          arguments: []
                          name: Person
                      range:
                        TCon:
                          arguments: []
                          name: Data.String
          value ->
                    VariableBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TRec:
                      fields: [
                          Pair:
                            first: name
                            second:
                              TCon:
                                arguments: []
                                name: Data.String
                          Pair:
                            first: dateOfBirth
                            second:
                              TRec:
                                fields: [
                                    Pair:
                                      first: day
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                    Pair:
                                      first: month
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                    Pair:
                                      first: year
                                      second:
                                        TCon:
                                          arguments: []
                                          name: Data.Int
                                  ]
                                fixed: true
                        ]
                      fixed: true
          main ->
                    VariableBinding:
              scheme:
                Scheme:
                  parameters: []
                  type:
                    TCon:
                      arguments: []
                      name: Data.String
        }
  module:
    Module:
      declarations: [
          TypeAliasDeclaration:
            name:
              ID:
                name: Person
            scheme:
              Scheme:
                parameters: []
                type:
                  TRec:
                    fields: [
                        Pair:
                          first: name
                          second:
                            TCon:
                              arguments: []
                              name: Data.String
                        Pair:
                          first: dateOfBirth
                          second:
                            TRec:
                              fields: [
                                  Pair:
                                    first: day
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                  Pair:
                                    first: month
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                  Pair:
                                    first: year
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                ]
                              fixed: true
                      ]
                    fixed: true
          LetDeclaration:
            expression:
              LambdaExpression:
                argument:
                  ID:
                    name: person
                expression:
                  ProjectionExpression:
                    index: 1
                    record:
                      IdReference:
                        name: person
                        type:
                          TCon:
                            arguments: [
                                TCon:
                                  arguments: [
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                    ]
                                  name: Tuple3
                                TCon:
                                  arguments: []
                                  name: Data.String
                              ]
                            name: Tuple2
                    type:
                      TCon:
                        arguments: []
                        name: Data.String
                type:
                  TArr:
                    domain:
                      TCon:
                        arguments: [
                            TCon:
                              arguments: [
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                ]
                              name: Tuple3
                            TCon:
                              arguments: []
                              name: Data.String
                          ]
                        name: Tuple2
                    range:
                      TCon:
                        arguments: []
                        name: Data.String
            id:
              LowerIDDeclarationID:
                name:
                  ID:
                    name: extractName
            scheme:
              Scheme:
                parameters: []
                type:
                  TArr:
                    domain:
                      TAlias:
                        arguments: []
                        name: Person
                    range:
                      TCon:
                        arguments: []
                        name: Data.String
          LetDeclaration:
            expression:
              ConstantConstructor:
                fields: [
                    ConstantConstructor:
                      fields: [
                          ConstantInt:
                            type:
                              TCon:
                                arguments: []
                                name: Data.Int
                            value: 9
                          ConstantInt:
                            type:
                              TCon:
                                arguments: []
                                name: Data.Int
                            value: 4
                          ConstantInt:
                            type:
                              TCon:
                                arguments: []
                                name: Data.Int
                            value: 1968
                        ]
                      name: Tuple3
                      type:
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                              TCon:
                                arguments: []
                                name: Data.Int
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: Tuple3
                    ConstantString:
                      type:
                        TCon:
                          arguments: []
                          name: Data.String
                      value: Graeme
                  ]
                name: Tuple2
                type:
                  TCon:
                    arguments: [
                        TCon:
                          arguments: [
                              TCon:
                                arguments: []
                                name: Data.Int
                              TCon:
                                arguments: []
                                name: Data.Int
                              TCon:
                                arguments: []
                                name: Data.Int
                            ]
                          name: Tuple3
                        TCon:
                          arguments: []
                          name: Data.String
                      ]
                    name: Tuple2
            id:
              LowerIDDeclarationID:
                name:
                  ID:
                    name: value
            scheme:
              Scheme:
                parameters: []
                type:
                  TRec:
                    fields: [
                        Pair:
                          first: name
                          second:
                            TCon:
                              arguments: []
                              name: Data.String
                        Pair:
                          first: dateOfBirth
                          second:
                            TRec:
                              fields: [
                                  Pair:
                                    first: day
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                  Pair:
                                    first: month
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                  Pair:
                                    first: year
                                    second:
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                ]
                              fixed: true
                      ]
                    fixed: true
          LetDeclaration:
            expression:
              CallExpression:
                operand:
                  ConstantConstructor:
                    fields: [
                        ProjectionExpression:
                          index: 0
                          record:
                            IdReference:
                              name: value
                              type:
                                TCon:
                                  arguments: [
                                      TCon:
                                        arguments: [
                                            TCon:
                                              arguments: []
                                              name: Data.Int
                                            TCon:
                                              arguments: []
                                              name: Data.Int
                                            TCon:
                                              arguments: []
                                              name: Data.Int
                                          ]
                                        name: Tuple3
                                      TCon:
                                        arguments: []
                                        name: Data.String
                                    ]
                                  name: Tuple2
                          type:
                            TCon:
                              arguments: [
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                ]
                              name: Tuple3
                        ConstantString:
                          type:
                            TCon:
                              arguments: []
                              name: Data.String
                          value: Andrew
                      ]
                    name: Tuple2
                    type:
                      TCon:
                        arguments: [
                            TCon:
                              arguments: [
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                  TCon:
                                    arguments: []
                                    name: Data.Int
                                ]
                              name: Tuple3
                            TCon:
                              arguments: []
                              name: Data.String
                          ]
                        name: Tuple2
                operator:
                  IdReference:
                    name: extractName
                    type:
                      TArr:
                        domain:
                          TCon:
                            arguments: [
                                TCon:
                                  arguments: [
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                      TCon:
                                        arguments: []
                                        name: Data.Int
                                    ]
                                  name: Tuple3
                                TCon:
                                  arguments: []
                                  name: Data.String
                              ]
                            name: Tuple2
                        range:
                          TCon:
                            arguments: []
                            name: Data.String
                type:
                  TCon:
                    arguments: []
                    name: Data.String
            id:
              LowerIDDeclarationID:
                name:
                  ID:
                    name: main
            scheme:
              Scheme:
                parameters: []
                type:
                  TCon:
                    arguments: []
                    name: Data.String
        ]
      exports: []
-- coreASTpp
typealias Person =
  <> {name : Data.String, dateOfBirth : {day : Data.Int, month : Data.Int, year : Data.Int}}

extractName : <> alias.Person -> Data.String
extractName =
  (LAMBDA person ->
    person
     .1
  )


value : <> {name : Data.String, dateOfBirth : {day : Data.Int, month : Data.Int, year : Data.Int}}
value =
  {{{
    {{{
      9
      4
      1968
    }}}
    "Graeme"
  }}}


main : <> Data.String
main =
  (CALL
    extractName
    {{{
      value
       .0
      "Andrew"
    }}}
  )