-- A cons list declaration with operations
type List a =
    Nil
  | Cons a (List a)


singleton x =
    Cons x Nil

duplicate x =
    Cons x (Cons x Nil)

intList =
    singleton 10

boolList =
    duplicate True
-- coreASTpp
type List =
  Nil
| Cons '0 List '0


singleton : <0> '0 -> List '0
singleton =
  (LAMBDA x ->
    (CALL
      (CALL
        Cons
        x
      )
      Nil
    )
  )


duplicate : <0> '0 -> List '0
duplicate =
  (LAMBDA x ->
    (CALL
      (CALL
        Cons
        x
      )
      (CALL
        (CALL
          Cons
          x
        )
        Nil
      )
    )
  )


intList : <> List Int
intList =
  (CALL
    singleton
    10
  )


boolList : <> List Bool
boolList =
  (CALL
    duplicate
    true
  )