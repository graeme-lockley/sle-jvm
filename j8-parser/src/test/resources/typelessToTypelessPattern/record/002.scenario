-- Field projection
value1 arb =
  arb.name

value2 arb =
  \f -> f arb.name 100

value3 f someInput =
  (f someInput).dateOfBirth.age
-- ast
Module:
  declarations: [
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: arb
              expression:
                FieldProjectionExpression:
                  name:
                    ID:
                      name: name
                  record:
                    IdReference:
                      name:
                        QualifiedID:
                          name: arb
                          qualifier: null
          ]
        id:
          LowerIDDeclarationID:
            name:
              ID:
                name: value1
        ttype: null
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: arb
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: f
                  expression:
                    CallExpression:
                      operand:
                        ConstantInt:
                          value: 100
                      operator:
                        CallExpression:
                          operand:
                            FieldProjectionExpression:
                              name:
                                ID:
                                  name: name
                              record:
                                IdReference:
                                  name:
                                    QualifiedID:
                                      name: arb
                                      qualifier: null
                          operator:
                            IdReference:
                              name:
                                QualifiedID:
                                  name: f
                                  qualifier: null
          ]
        id:
          LowerIDDeclarationID:
            name:
              ID:
                name: value2
        ttype: null
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: someInput
                  expression:
                    FieldProjectionExpression:
                      name:
                        ID:
                          name: age
                      record:
                        FieldProjectionExpression:
                          name:
                            ID:
                              name: dateOfBirth
                          record:
                            NestedExpressions:
                              expressions: [
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: someInput
                                            qualifier: null
                                    operator:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: f
                                            qualifier: null
                                ]
          ]
        id:
          LowerIDDeclarationID:
            name:
              ID:
                name: value3
        ttype: null
    ]
  exports: []
  imports: []