-- A thunk let declaration
calculate : () -> Int
calculate =
    100

value =
    calculate ()
-- ast
Module:
  declarations: [
      LetDeclaration:
        expressions: [
            ConstantInt:
              value: 100
          ]
        name:
          ID:
            name: calculate
        ttype:
          TArrow:
            domain:
              TUnit:
            range:
              TConstReference:
                arguments: []
                name:
                  QualifiedID:
                    name: Int
                    qualifier: null
      LetDeclaration:
        expressions: [
            CallExpression:
              operand:
                Unit:
              operator:
                IdReference:
                  name:
                    QualifiedID:
                      name: calculate
                      qualifier: null
          ]
        name:
          ID:
            name: value
        ttype: null
    ]
  exports: []
  imports: []