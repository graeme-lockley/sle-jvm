-- Single declaration with a type signature
add : Int -> Int -> Int
add x y =
    x + y
-- ast
Module:
  declarations: [
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: x
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: y
                  expression:
                    BinaryOpExpression:
                      left:
                        IdReference:
                          name:
                            QualifiedID:
                              name: x
                              qualifier: null
                      operator:
                        ID:
                          name: +
                      right:
                        IdReference:
                          name:
                            QualifiedID:
                              name: y
                              qualifier: null
          ]
        id:
          LowerIDDeclarationID:
            name:
              ID:
                name: add
        ttype:
          TArrow:
            domain:
              TTypeReference:
                arguments: []
                name:
                  QualifiedID:
                    name: Int
                    qualifier: null
            range:
              TArrow:
                domain:
                  TTypeReference:
                    arguments: []
                    name:
                      QualifiedID:
                        name: Int
                        qualifier: null
                range:
                  TTypeReference:
                    arguments: []
                    name:
                      QualifiedID:
                        name: Int
                        qualifier: null
    ]
  exports: []
  imports: []