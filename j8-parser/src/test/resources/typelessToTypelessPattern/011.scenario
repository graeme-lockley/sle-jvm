-- Module with type alias and let declaration
typealias IntMap =
    Int -> Int

add : IntMap
add =
    \a b -> a + b
-- ast
Module:
  declarations: [
      TypeAliasDeclaration:
        name:
          ID:
            name: IntMap
        scheme:
          Scheme:
            parameters: []
            type:
              TArr:
                domain:
                  TCon:
                    arguments: []
                    name: Int
                range:
                  TCon:
                    arguments: []
                    name: Int
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: a
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: b
                  expression:
                    CallExpression:
                      operand:
                        IdReference:
                          name: b
                      operator:
                        CallExpression:
                          operand:
                            IdReference:
                              name: a
                          operator:
                            IdReference:
                              name: (+)
          ]
        name:
          ID:
            name: add
        scheme:
          Scheme:
            parameters: []
            type:
              TCon:
                arguments: []
                name: IntMap
    ]
  exports: []
  imports: []
