-- A map declaration defined as equations
map : (a -> b) -> List a -> List b

map f Nil =
    Nil

map f (Cons x xs) =
    Cons (f x) (map f xs)
-- ast
Module:
  declarations: [
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
              expression:
                LambdaExpression:
                  argument:
                    ConstructorReferencePattern:
                      name:
                        QualifiedID:
                          name: Nil
                          qualifier: null
                      parameters: []
                  expression:
                    ConstructorReference:
                      name:
                        QualifiedID:
                          name: Nil
                          qualifier: null
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
              expression:
                LambdaExpression:
                  argument:
                    ConstantNTuplePattern:
                      patterns: [
                          ConstructorReferencePattern:
                            name:
                              QualifiedID:
                                name: Cons
                                qualifier: null
                            parameters: [
                                IdReferencePattern:
                                  name: x
                                IdReferencePattern:
                                  name: xs
                              ]
                        ]
                  expression:
                    CallExpression:
                      operand:
                        NestedExpressions:
                          expressions: [
                              CallExpression:
                                operand:
                                  IdReference:
                                    name:
                                      QualifiedID:
                                        name: xs
                                        qualifier: null
                                operator:
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: f
                                            qualifier: null
                                    operator:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: map
                                            qualifier: null
                            ]
                      operator:
                        CallExpression:
                          operand:
                            NestedExpressions:
                              expressions: [
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: x
                                            qualifier: null
                                    operator:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: f
                                            qualifier: null
                                ]
                          operator:
                            ConstructorReference:
                              name:
                                QualifiedID:
                                  name: Cons
                                  qualifier: null
          ]
        id:
          LowerIDDeclarationID:
            name:
              ID:
                name: map
        ttype:
          TArrow:
            domain:
              TNTuple:
                types: [
                    TArrow:
                      domain:
                        TVarReference:
                          name: a
                      range:
                        TVarReference:
                          name: b
                  ]
            range:
              TArrow:
                domain:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: a
                      ]
                    name:
                      QualifiedID:
                        name: List
                        qualifier: null
                range:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: b
                      ]
                    name:
                      QualifiedID:
                        name: List
                        qualifier: null
    ]
  exports: []
  imports: []