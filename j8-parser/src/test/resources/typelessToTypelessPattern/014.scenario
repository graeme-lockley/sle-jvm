-- A simple case expression over a product Tuple
type Tuple a b =
    Tuple a b

first : (Tuple a b) -> a
first t =
    case t of
        Tuple a b -> a

second : (Tuple a b) -> b
second t =
    case t of
        Tuple a b -> b

mapFirst : (a -> c) -> (Tuple a b) -> (Tuple c b)
mapFirst f t =
    case t of
        Tuple a b -> Tuple (f a) b

mapSecond : (b -> c) -> (Tuple a b) -> (Tuple a c)
mapSecond f t =
    case t of
        Tuple a b -> Tuple a (f b)
-- ast
Module:
  declarations: [
      TypeDeclaration:
        arguments: [
            ID:
              name: a
            ID:
              name: b
          ]
        constructors: [
            Constructor:
              arguments: [
                  TVarReference:
                    name: a
                  TVarReference:
                    name: b
                ]
              name:
                ID:
                  name: Tuple
          ]
        name:
          ID:
            name: Tuple
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: t
              expression:
                CaseExpression:
                  items: [
                      CaseItem:
                        expression:
                          IdReference:
                            name:
                              QualifiedID:
                                name: a
                                qualifier: null
                        pattern:
                          ConstructorReferencePattern:
                            name:
                              QualifiedID:
                                name: Tuple
                                qualifier: null
                            parameters: [
                                IdReferencePattern:
                                  name: a
                                IdReferencePattern:
                                  name: b
                              ]
                    ]
                  operator:
                    IdReference:
                      name:
                        QualifiedID:
                          name: t
                          qualifier: null
          ]
        name:
          ID:
            name: first
        ttype:
          TArrow:
            domain:
              TTypeReference:
                arguments: [
                    TVarReference:
                      name: a
                    TVarReference:
                      name: b
                  ]
                name:
                  QualifiedID:
                    name: Tuple
                    qualifier: null
            range:
              TVarReference:
                name: a
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: t
              expression:
                CaseExpression:
                  items: [
                      CaseItem:
                        expression:
                          IdReference:
                            name:
                              QualifiedID:
                                name: b
                                qualifier: null
                        pattern:
                          ConstructorReferencePattern:
                            name:
                              QualifiedID:
                                name: Tuple
                                qualifier: null
                            parameters: [
                                IdReferencePattern:
                                  name: a
                                IdReferencePattern:
                                  name: b
                              ]
                    ]
                  operator:
                    IdReference:
                      name:
                        QualifiedID:
                          name: t
                          qualifier: null
          ]
        name:
          ID:
            name: second
        ttype:
          TArrow:
            domain:
              TTypeReference:
                arguments: [
                    TVarReference:
                      name: a
                    TVarReference:
                      name: b
                  ]
                name:
                  QualifiedID:
                    name: Tuple
                    qualifier: null
            range:
              TVarReference:
                name: b
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: t
                  expression:
                    CaseExpression:
                      items: [
                          CaseItem:
                            expression:
                              CallExpression:
                                operand:
                                  IdReference:
                                    name:
                                      QualifiedID:
                                        name: b
                                        qualifier: null
                                operator:
                                  CallExpression:
                                    operand:
                                      CallExpression:
                                        operand:
                                          IdReference:
                                            name:
                                              QualifiedID:
                                                name: a
                                                qualifier: null
                                        operator:
                                          IdReference:
                                            name:
                                              QualifiedID:
                                                name: f
                                                qualifier: null
                                    operator:
                                      ConstructorReference:
                                        name:
                                          QualifiedID:
                                            name: Tuple
                                            qualifier: null
                            pattern:
                              ConstructorReferencePattern:
                                name:
                                  QualifiedID:
                                    name: Tuple
                                    qualifier: null
                                parameters: [
                                    IdReferencePattern:
                                      name: a
                                    IdReferencePattern:
                                      name: b
                                  ]
                        ]
                      operator:
                        IdReference:
                          name:
                            QualifiedID:
                              name: t
                              qualifier: null
          ]
        name:
          ID:
            name: mapFirst
        ttype:
          TArrow:
            domain:
              TArrow:
                domain:
                  TVarReference:
                    name: a
                range:
                  TVarReference:
                    name: c
            range:
              TArrow:
                domain:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: a
                        TVarReference:
                          name: b
                      ]
                    name:
                      QualifiedID:
                        name: Tuple
                        qualifier: null
                range:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: c
                        TVarReference:
                          name: b
                      ]
                    name:
                      QualifiedID:
                        name: Tuple
                        qualifier: null
      LetDeclaration:
        expressions: [
            LambdaExpression:
              argument:
                IdReferencePattern:
                  name: f
              expression:
                LambdaExpression:
                  argument:
                    IdReferencePattern:
                      name: t
                  expression:
                    CaseExpression:
                      items: [
                          CaseItem:
                            expression:
                              CallExpression:
                                operand:
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: b
                                            qualifier: null
                                    operator:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: f
                                            qualifier: null
                                operator:
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name:
                                          QualifiedID:
                                            name: a
                                            qualifier: null
                                    operator:
                                      ConstructorReference:
                                        name:
                                          QualifiedID:
                                            name: Tuple
                                            qualifier: null
                            pattern:
                              ConstructorReferencePattern:
                                name:
                                  QualifiedID:
                                    name: Tuple
                                    qualifier: null
                                parameters: [
                                    IdReferencePattern:
                                      name: a
                                    IdReferencePattern:
                                      name: b
                                  ]
                        ]
                      operator:
                        IdReference:
                          name:
                            QualifiedID:
                              name: t
                              qualifier: null
          ]
        name:
          ID:
            name: mapSecond
        ttype:
          TArrow:
            domain:
              TArrow:
                domain:
                  TVarReference:
                    name: b
                range:
                  TVarReference:
                    name: c
            range:
              TArrow:
                domain:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: a
                        TVarReference:
                          name: b
                      ]
                    name:
                      QualifiedID:
                        name: Tuple
                        qualifier: null
                range:
                  TTypeReference:
                    arguments: [
                        TVarReference:
                          name: a
                        TVarReference:
                          name: c
                      ]
                    name:
                      QualifiedID:
                        name: Tuple
                        qualifier: null
    ]
  exports: []
  imports: []