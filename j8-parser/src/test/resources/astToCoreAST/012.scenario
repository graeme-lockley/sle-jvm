-- Usage of different forms of +
let plus : <S: Int | String> S -> S -> S -> S =
    \a b c -> a + b + c
-- ast
Module:
  declarations: [
      LetDeclaration:
        expression:
          LambdaExpression:
            argument:
              ID:
                name: a
            expression:
              LambdaExpression:
                argument:
                  ID:
                    name: b
                expression:
                  LambdaExpression:
                    argument:
                      ID:
                        name: c
                    expression:
                      CallExpression:
                        operand:
                          IdReference:
                            name: c
                        operator:
                          CallExpression:
                            operand:
                              CallExpression:
                                operand:
                                  IdReference:
                                    name: b
                                operator:
                                  CallExpression:
                                    operand:
                                      IdReference:
                                        name: a
                                    operator:
                                      IdReference:
                                        name: (+)
                            operator:
                              IdReference:
                                name: (+)
        name:
          ID:
            name: plus
        schema:
          Schema:
            parameters: [
                Parameter:
                  constraint:
                    TOr:
                      types: [
                          TCon:
                            name: Int
                          TCon:
                            name: String
                        ]
                  name: 0
              ]
            type:
              TArr:
                domain:
                  TVar:
                    variable: 0
                range:
                  TArr:
                    domain:
                      TVar:
                        variable: 0
                    range:
                      TArr:
                        domain:
                          TVar:
                            variable: 0
                        range:
                          TVar:
                            variable: 0
    ]