export suite

import file:./List
import file:./String as S
import file:./Option
import file:../Text/Regex
import file:../Test/Unit exposing Suite(..)

import file:../Debug as D


separator =
	Regex.fromString ",|\n"
		|> Option.withDefault Regex.never


parse : String -> List String
parse input =
	if S.startsWith "//" input then
		S.split (S.takeLeft 1 (S.dropLeft 2 input)) (S.dropLeft 4 input)
	else
		Regex.split separator input


add : String -> Int
add input =
	parse input
		|> List.map S.toInt
		|> List.map (Option.withDefault 0)
		|> List.sum


suite =
	Describe "add"
	[ Test "\"\" == 0" <| add "" == 0
	, Test "\"123\" == 123" <| add "123" == 123
	, Test "\"1,2,3\" == 6" <| add "1,2,3" == 6
	, Test "\"1,2\\n3\" == 6" <| add "1,2\n3" == 6
	, Test "\"//;\\n1;2;3\" == 6" <| add "//;\n1;2;3" == 6
	]
