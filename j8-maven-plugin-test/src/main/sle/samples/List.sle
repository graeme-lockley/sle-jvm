type Maybe a =
    Nothing
  | Just a

type List a =
    Nil
  | Cons a (List a)


head l =
    case l of
        Nil -> Nothing
        Cons x xs -> Just x


tail l =
    case l of
        Nil -> Nothing
        Cons x xs -> Just xs


map : (a -> b) -> List a -> List b
map f l =
    case l of
        Nil -> Nil
        Cons x xs -> Cons (f x) (map f xs)


plus5 n =
    n + 5